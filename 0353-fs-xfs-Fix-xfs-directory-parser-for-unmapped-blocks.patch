From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Frayer <nfrayer@redhat.com>
Date: Mon, 12 Feb 2024 22:33:38 +0100
Subject: [PATCH] fs/xfs: Fix xfs directory parser for unmapped blocks

Previously, the xfs directory parser would scan through directory
extent blocks and not check whether or not the block was valid
(ie not unmapped) and would treat it as valid resulting in issues
when trying to read direntries from them.
Add code to check if a directory extent block is valid. If not,
skip to the next one.

Currently checking magic for "XDD3", "XDB3", "XDD2" and "XDB2".

Signed-off-by: Nicolas Frayer <nfrayer@redhat.com>
---
 grub-core/fs/xfs.c | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/grub-core/fs/xfs.c b/grub-core/fs/xfs.c
index bc2224dbb463..60d2bd12104c 100644
--- a/grub-core/fs/xfs.c
+++ b/grub-core/fs/xfs.c
@@ -107,6 +107,14 @@ GRUB_MOD_LICENSE ("GPLv3+");
 	 XFS_SB_FEAT_INCOMPAT_NEEDSREPAIR | \
 	 XFS_SB_FEAT_INCOMPAT_NREXT64)
 
+/*
+ * Directory block magic
+*/
+#define	XFS_DIR2_BLOCK_MAGIC	0x58443242	/* XDB2: single block dirs */
+#define	XFS_DIR2_DATA_MAGIC	0x58443244	/* XDD2: multiblock dirs */
+#define	XFS_DIR3_BLOCK_MAGIC	0x58444233	/* XDB3: single block dirs */
+#define	XFS_DIR3_DATA_MAGIC	0x58444433	/* XDD3: multiblock dirs */
+
 struct grub_xfs_sblock
 {
   grub_uint8_t magic[4];
@@ -902,6 +910,7 @@ grub_xfs_iterate_dir (grub_fshelp_node_t dir,
 					grub_xfs_first_de(dir->data, dirblock);
 	    int entries = -1;
 	    char *end = dirblock + dirblk_size;
+	    grub_uint32_t dirblock_magic;
 
 	    numread = grub_xfs_read_file (dir, 0, 0,
 					  blk << dirblk_log2,
@@ -912,6 +921,17 @@ grub_xfs_iterate_dir (grub_fshelp_node_t dir,
 	        return 0;
 	      }
 
+	    /* If the dirblock magic number doesn't match a valid number then skip it */
+	    dirblock_magic = grub_be_to_cpu32(grub_get_unaligned32(dirblock));
+
+	    if ((dirblock_magic != XFS_DIR2_BLOCK_MAGIC) &&
+	        (dirblock_magic != XFS_DIR2_DATA_MAGIC) &&
+	        (dirblock_magic != XFS_DIR3_BLOCK_MAGIC) &&
+	        (dirblock_magic != XFS_DIR3_DATA_MAGIC))
+	      {
+	        continue;
+	      }
+
 	    /*
 	     * Leaf and tail information are only in the data block if the number
 	     * of extents is 1.
